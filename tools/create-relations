#!/bin/python3

import itertools
from sys import argv

import fscommon as fs

INSERT_RELATION_FORMAT = 'INSERT INTO "CardRelations"("RelatedToKey", "RelatedCardKey", "RelationType") VALUES (\'{card_key}\', \'{related_card_key}\', {relation_type});\n'

# TODO relation ideas:
# non-monster soul cards (Lost Soul, The Bone, etc)
# new card -> old card
# warp cards from the same franchise (Hotline Miami treasures)
# functionally same cards (Two Cents!, Three Cents!)
# haunt cards
# synergies?

def get_card(collections, key):
    for col in collections:
        card = col.get(key)
        if card is not None: return card
    return None

if len(argv) < 3:
    print('Invalid amount of arguments')
    exit(1)

out_path = argv[1]
cards_collection_paths = argv[2:]

collections: list[fs.CardCollection] = [fs.CardCollection.load_from_dir(p) for p in cards_collection_paths]

result = ''

for cards in collections:
    # starting items
    characters = cards.get_characters()
    for character in characters:
        starting_items = character.extract_starting_items()
        for item in starting_items:
            result += INSERT_RELATION_FORMAT.format_map({
                'card_key': character.key,
                'related_card_key': item.key,
                'relation_type': fs.RelationTypes.StartingItem
            })

    # guppy items
    guppy_items = cards.guppy_items()
    combinations = itertools.combinations(guppy_items, 2)
    for comb in combinations:
        result += INSERT_RELATION_FORMAT.format_map({
            'card_key': comb[0].key,
            'related_card_key': comb[1].key,
            'relation_type': fs.RelationTypes.GuppyItem
        })

    # older versions
    keys = cards.get_keys()
    for key in keys:
        if not key.endswith('-b2'): continue
        new_key = key.replace('-b2', '-b')
        old_card = get_card(collections, new_key)

        if old_card is None: continue
        result += INSERT_RELATION_FORMAT.format_map({
            'card_key': key,
            'related_card_key': old_card.key,
            'relation_type': fs.RelationTypes.OlderVersion
        })


open(out_path, 'w').write(result)